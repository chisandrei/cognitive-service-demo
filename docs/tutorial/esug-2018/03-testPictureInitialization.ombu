OmEntry {	#tags : {		#prior : OmNullReference [  ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CSDPictureTests,				#isMetaSide : false			},			#name : #pictureUrl,			#protocol : #accessing,			#sourceCode : 'pictureUrl\r\t^ \'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d7/Einstein-with-habicht-and-solovine.jpg/1280px-Einstein-with-habicht-and-solovine.jpg\'',			#stamp : 'AndreiChis 9/6/2018 00:07',			#package : #Cognitive-Services-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CSDPictureTests,				#isMetaSide : false			},			#name : #createEmptyPicture,			#protocol : #accessing,			#sourceCode : 'createEmptyPicture\r  ^ CSPicture new\r    url: self pictureUrl',			#stamp : 'AndreiChis 9/6/2018 00:07',			#package : #Cognitive-Services-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CSDPictureTests,				#isMetaSide : false			},			#name : #testPictureInitialization,			#protocol : #tests,			#sourceCode : 'testPictureInitialization\r  | picture |\r  picture := self createEmptyPicture.\r  self assert: picture url equals: self pictureUrl.\r  self assert: picture faces isEmpty.\r  self assert: picture hasFaceStorage equals: false.',			#stamp : 'AndreiChis 9/6/2018 00:07',			#package : #Cognitive-Services-FaceAPI-Examples		}	}}