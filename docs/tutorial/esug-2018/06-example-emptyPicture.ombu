OmEntry {	#tags : {		#prior : OmNullReference [  ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CSDPictureExamples,				#isMetaSide : false			},			#name : #pictureUrl,			#protocol : #accessing,			#sourceCode : 'pictureUrl\r\t^ \'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d7/Einstein-with-habicht-and-solovine.jpg/1280px-Einstein-with-habicht-and-solovine.jpg\'',			#stamp : 'AndreiChis 9/6/2018 10:03',			#package : #Cognitive-Services-FaceAPI-Examples		}	}}OmEntry {	#tags : {		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CSDPictureExamples,				#isMetaSide : false			},			#name : #emptyPicture,			#protocol : #'example - picture',			#sourceCode : 'emptyPicture\r  <gtExample>\r  | picture |\r  picture := CSPicture new\r   url: self pictureUrl.\r  self assert: picture url equals: self pictureUrl.\r  self assert: picture faces isEmpty.\r  self assert: picture hasFaceStorage equals: false.\r  ^ picture',			#stamp : 'AndreiChis 9/6/2018 10:03',			#package : #Cognitive-Services-FaceAPI-Examples		}	}}